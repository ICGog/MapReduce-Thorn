spawn kim {
  import PROFILE.*;
body{
  ~!@testStartLatch();
  #Regrettable...
  recv{"go" => {}}
  
  {: serverComp : server :} = ~!@recOfPorts();
  
  datesvc = server <-> dateServicePlz();
  
  porpoise = Profile([
        {: topic: "swimming",           weight: 15:},
        {: topic: "sushi",              weight: 12:},
        {: topic: "moon",               weight: 7:},
        {: topic: "watersports",        weight: 10:}],
        1);
  cat = Profile([
        {: topic: "mice", weight: 8 :},
        {: topic: "sushi", weight: 8 :},
        {: topic: "moon", weight: 3 :},
        {: topic: "naps", weight: 6:}], 
        12);
  whale = Profile([
        {: topic: "swimming",           weight: 15:},
        {: topic: "sushi",              weight: 12:},
        {: topic: "singing",            weight: 10:},
        {: topic: "watersports",        weight: 3:}],
        1);
        
  ~!@assert(! cat.compatible?(porpoise))@!~  ;
  
  rporp = datesvc <-> register("Porpoise", porpoise);
  ~!@eq(rporp, "Porpoise, welcome to DateService!")@!~  ;
  rcat  = datesvc <-> register("Cat", cat);
  rwhale = datesvc <-> register("Whale", whale);
        
  date4porp = datesvc <-> makeMeAMatch("Porpoise");
  ~!@eq(date4porp, {:date:"Whale":})@!~  ;
  date24porp =datesvc <-> makeMeAMatch("Porpoise");
  ~!@assert(date24porp ~ {:fail: "Sorry.*"/[] :} )@!~  ; 
  
  datesvc <-- stop();  

  # Remove this from example -- it's part of the dist testing framework.
  ~!@checkphase()@!~  ;
}body
}kim;
