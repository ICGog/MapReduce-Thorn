module HTTP {
  javaly class StringSocketeer = fisher.runtime.lib.socketeer.StringSocketeer {
    new StringSocketeer(port);
  }
  javaly class ReplySocket = fisher.runtime.lib.socketeer.ReplySocketTh {
    def `<<<`(x) = send;
  }
  javaly fun siteForStrings(nodeName, port) = fisher.runtime.lib.SiteForStrings.create;
  
  javaly class HTTPSocketeer = fisher.runtime.lib.http.HTTPSocketeer {
    new HTTPSocketeer(port);
  }
  
  javaly class HTTPRequest(verb, resource) = fisher.runtime.lib.http.HTTPRequest {
    def verb() = verb;
    def protocol() = protocol;
    def resource() = resource;
    def buildResponse(rcPlusMean, content, extraHeaders) = buildResponse;
    def respond(rcPlusMean, content, extraHeaders) = respond;
  }
  
  javaly class HTTPResponse = fisher.runtime.lib.http.HTTPResponse {
    def headers() = headers;
    def content() = content;
    def protocolVersion() = protocolVersion;
  }
  
  HTTP_404 = {: code: 404, meaning: "Not Found" :};
  OK =       {: code: 200, meaning: "OK" :};
  
}

